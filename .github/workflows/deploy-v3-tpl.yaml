# deploy to kubernetes workflow
name: Deploy to Kubernetes
on:
  workflow_call:
    inputs:
      version:
        description: "Kubectl version"
        default: "latest"
        required: false
        type: string
      cluster:
        description: "Kubernetes cluster"
        required: true
        type: string
      namespace:
        description: "Kubernetes cluster namespace"
        required: true
        type: string
      images:
        description: "The image name"
        required: true
        type: string
      tag:
        description: "The image tag"
        required: true
        type: string
      releaseName:
        description: "The release name"
        required: true
        type: string
      dir:
        required: false
        type: string
      revision:
        description: "Revsion"
        required: true
        type: string
      auto-sync:
        description: auto sync
        required: false
        type: boolean
        default: true
    secrets:
      ARGOCD_TOKEN:
        required: true
env:
  ARGOCD_SERVER: argocd.naturalselectionlabs.com:443
  ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
  ARGOCD_OPTS: "--grpc-web"
  APP_NAME: ${{ inputs.releaseName }}-${{ inputs.cluster }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup ArgoCD CLI
        uses: imajeetyadav/argocd-cli@v1
        with:
          version: v2.9.3 # optional
      - name: Deploy to Argo
        run: |
          argocd app create    \
          --repo https://github.com/${{ github.repository }} \
          --path ${{ inputs.dir }} \
          --project ${{ inputs.namespace }} \
          --dest-name ${{ inputs.cluster }} \
          --dest-namespace ${{ inputs.namespace }} \
          --config-management-plugin=avp-kustomize \
          --revision ${{ inputs.revision }} \
          --plugin-env AVP_SECRET=guardian:avp-${{ inputs.cluster }} \
          --plugin-env APP_REPO=${{ github.repository }} \
          --plugin-env IMAGE_NAME=${{ inputs.images }} \
          --plugin-env IMAGE_TAG=${{ inputs.tag }} \
          --upsert
      - name: Get app info
        run: argocd app get ${{ env.APP_NAME }}
